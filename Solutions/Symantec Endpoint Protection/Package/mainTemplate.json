{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for Symantec Endpoint Protection"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Symantec Endpoint Protection",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    }
  },
  "variables": {
    "solutionId": "azuresentinel.azure-sentinel-solution-symantecendpointprotection",
    "_solutionId": "[variables('solutionId')]",
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "analyticRuleVersion1": "1.0.1",
    "analyticRulecontentId1": "fa0ab69c-7124-4f62-acdd-61017cf6ce89",
    "_analyticRulecontentId1": "[variables('analyticRulecontentId1')]",
    "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId1'))]",
    "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId1')))]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "analyticRuleVersion2": "1.0.1",
    "analyticRulecontentId2": "072ee087-17e1-474d-b162-bbe38bcab9f9",
    "_analyticRulecontentId2": "[variables('analyticRulecontentId2')]",
    "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId2'))]",
    "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId2')))]",
    "uiConfigId1": "SymantecEndpointProtection",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "SymantecEndpointProtection",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1')))]",
    "dataConnectorVersion1": "1.0.0",
    "workbookVersion1": "1.0.0",
    "workbookContentId1": "SymantecEndpointProtection",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1')))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "parserVersion1": "1.0.0",
    "parserContentId1": "SymantecEndpointProtection-Parser",
    "_parserContentId1": "[variables('parserContentId1')]",
    "parserName1": "SymantecEndpointProtection",
    "_parserName1": "[concat(parameters('workspace'),'/',variables('parserName1'))]",
    "parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
    "_parserId1": "[variables('parserId1')]",
    "parserTemplateSpecName1": "[concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId1')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Symantec Endpoint Protection Analytics Rule 1 with template",
        "displayName": "Symantec Endpoint Protection Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName1'),'/',variables('analyticRuleVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "ExcessiveBlockedTrafficGeneratedbyUser_AnalyticalRules Analytics Rule with template version 2.0.4",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId1')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Creates an incident when a Symantec Endpoint Proection agent detects excessive amounts of blocked traffic generated by a single user.",
                "displayName": "Excessive Blocked Traffic Events Generated by User",
                "enabled": false,
                "query": "let threshold = 15;\nlet NoteableEvents = SymantecEndpointProtection\n| where LogType == \"Agent Traffic Logs\"\n| where Action =~ \"Blocked\"\n| summarize TotalBlockedEvents = count() by UserName\n| where TotalBlockedEvents > threshold;\nSymantecEndpointProtection\n| where LogType =~ \"Agent Traffic Logs\"\n| where Action =~ \"Blocked\"\n| join kind=inner (NoteableEvents) on UserName\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), Total = count() by UserName, RuleName, ServerName, LocalHostIpAddr, LocalPortNumber, TrafficDirection, RemoteHostIpAddr, RemotePortNumber, ApplicationName\n| extend timestamp = StartTimeUtc, AccountCustomEntity = UserName, HostCustomEntity = ServerName, IPCustomEntity = LocalHostIpAddr\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "SymantecEndpointProtection",
                    "dataTypes": [
                      "Syslog"
                    ]
                  }
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "AccountCustomEntity"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "IPCustomEntity"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "HostCustomEntity"
                      }
                    ],
                    "entityType": "Host"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId1'),'/'))))]",
              "properties": {
                "description": "Symantec Endpoint Protection Analytics Rule 1",
                "parentId": "[variables('analyticRuleId1')]",
                "contentId": "[variables('_analyticRulecontentId1')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Symantec Endpoint Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('analyticRuleTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "properties": {
        "description": "Symantec Endpoint Protection Analytics Rule 2 with template",
        "displayName": "Symantec Endpoint Protection Analytics Rule template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('analyticRuleTemplateSpecName2'),'/',variables('analyticRuleVersion2'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "AnalyticsRule"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('analyticRuleTemplateSpecName2'))]"
      ],
      "properties": {
        "description": "MalwareDetected_AnalyticalRules Analytics Rule with template version 2.0.4",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('AnalyticRulecontentId2')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Creates an incident when a Symantec Endpoint Proection agent detects malware and the malware was not cleaned.",
                "displayName": "Malware Detected",
                "enabled": false,
                "query": "SymantecEndpointProtection\n| where LogType == \"Agent Risk Logs\"\n| where CategorySet == \"Malware\"\n| where ActualAction !contains \"Cleaned\"\n| summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by SrcIpAddr, SrcHostName, UserName, FilePath, ActualAction, CategorySet, CategoryType\n| extend timestamp = StartTimeUtc, IPCustomEntity = SrcIpAddr, HostCustomEntity = SrcHostName, AccountCustomEntity = UserName\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "SymantecEndpointProtection",
                    "dataTypes": [
                      "Syslog"
                    ]
                  }
                ],
                "tactics": [
                  "Execution"
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "AccountCustomEntity"
                      }
                    ],
                    "entityType": "Account"
                  },
                  {
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "IPCustomEntity"
                      }
                    ],
                    "entityType": "IP"
                  },
                  {
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "HostCustomEntity"
                      }
                    ],
                    "entityType": "Host"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId2'),'/'))))]",
              "properties": {
                "description": "Symantec Endpoint Protection Analytics Rule 2",
                "parentId": "[variables('analyticRuleId2')]",
                "contentId": "[variables('_analyticRulecontentId2')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Symantec Endpoint Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "properties": {
        "description": "Symantec Endpoint Protection data connector with template",
        "displayName": "Symantec Endpoint Protection template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('dataConnectorTemplateSpecName1'),'/',variables('dataConnectorVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "DataConnector"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('dataConnectorTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "Symantec Endpoint Protection data connector with template version 2.0.4",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "Symantec Endpoint Protection",
                  "publisher": "Broadcom",
                  "descriptionMarkdown": "The [Broadcom Symantec Endpoint Protection (SEP)](https://www.broadcom.com/products/cyber-security/endpoint/end-user/enterprise) connector allows you to easily connect your SEP logs with Microsoft Sentinel. This gives you more insight into your organization's network and improves your security operation capabilities.",
                  "additionalRequirementBanner": "These queries are dependent on a parser based on a Kusto Function deployed as part of the solution.",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "SymantecEndpointProtection",
                      "baseQuery": "SymantecEndpointProtection"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Top 10 Log Types ",
                      "query": "SymantecEndpointProtection \n | summarize count() by LogType \n| top 10 by count_"
                    },
                    {
                      "description": "Top 10 Users",
                      "query": "SymantecEndpointProtection \n | summarize count() by UserName \n| top 10 by count_"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "Syslog (SymantecEndpointProtection)",
                      "lastDataReceivedQuery": "SymantecEndpointProtection \n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "SymantecEndpointProtection \n      | where TimeGenerated > ago(3d)\n    |take 1\n        | project IsConnected = true"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "write permission is required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "delete": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Symantec Endpoint Protection (SEP)",
                        "description": "must be configured to export logs via Syslog"
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": "**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected which is deployed as part of the solution. To view the function code in Log Analytics, open Log Analytics/Microsoft Sentinel Logs blade, click Functions and search for the alias Symantec Endpoint Protection and load the function code or click [here](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Symantec%20Endpoint%20Protection/Parsers/SymantecEndpointProtection.txt), on the second line of the query, enter the hostname(s) of your SymantecEndpointProtection device(s) and any other unique identifiers for the logstream. The function usually takes 10-15 minutes to activate after solution installation/update."
                    },
                    {
                      "description": "Typically, you should install the agent on a different computer from the one on which the logs are generated.\n\n>  Syslog logs are collected only from **Linux** agents.",
                      "instructions": [
                        {
                          "parameters": {
                            "title": "Choose where to install the agent:",
                            "instructionSteps": [
                              {
                                "title": "Install agent on Azure Linux Virtual Machine",
                                "description": "Select the machine to install the agent on and then click **Connect**.",
                                "instructions": [
                                  {
                                    "parameters": {
                                      "linkType": "InstallAgentOnLinuxVirtualMachine"
                                    },
                                    "type": "InstallAgent"
                                  }
                                ]
                              },
                              {
                                "title": "Install agent on a non-Azure Linux Machine",
                                "description": "Download the agent on the relevant machine and follow the instructions.",
                                "instructions": [
                                  {
                                    "parameters": {
                                      "linkType": "InstallAgentOnLinuxNonAzure"
                                    },
                                    "type": "InstallAgent"
                                  }
                                ]
                              }
                            ]
                          },
                          "type": "InstructionStepsGroup"
                        }
                      ],
                      "title": "1. Install and onboard the agent for Linux"
                    },
                    {
                      "description": "Configure the facilities you want to collect and their severities.\n 1. Under workspace advanced settings **Configuration**, select **Data** and then **Syslog**.\n 2. Select **Apply below configuration to my machines** and select the facilities and severities.\n 3.  Click **Save**.",
                      "instructions": [
                        {
                          "parameters": {
                            "linkType": "OpenSyslogSettings"
                          },
                          "type": "InstallAgent"
                        }
                      ],
                      "title": "2. Configure the logs to be collected"
                    },
                    {
                      "description": "[Follow these instructions](https://techdocs.broadcom.com/us/en/symantec-security-software/endpoint-security-and-management/endpoint-protection/all/Monitoring-Reporting-and-Enforcing-Compliance/viewing-logs-v7522439-d37e464/exporting-data-to-a-syslog-server-v8442743-d15e1107.html) to configure the Symantec Endpoint Protection to forward syslog. Use the IP address or hostname for the Linux device with the Linux agent installed as the Destination IP address.",
                      "title": "3. Configure and connect the Symantec Endpoint Protection"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Symantec Endpoint Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Symantec Endpoint Protection",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Symantec Endpoint Protection",
          "publisher": "Broadcom",
          "descriptionMarkdown": "The [Broadcom Symantec Endpoint Protection (SEP)](https://www.broadcom.com/products/cyber-security/endpoint/end-user/enterprise) connector allows you to easily connect your SEP logs with Microsoft Sentinel. This gives you more insight into your organization's network and improves your security operation capabilities.",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "SymantecEndpointProtection",
              "baseQuery": "SymantecEndpointProtection"
            }
          ],
          "dataTypes": [
            {
              "name": "Syslog (SymantecEndpointProtection)",
              "lastDataReceivedQuery": "SymantecEndpointProtection \n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "SymantecEndpointProtection \n      | where TimeGenerated > ago(3d)\n    |take 1\n        | project IsConnected = true"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "Top 10 Log Types ",
              "query": "SymantecEndpointProtection \n | summarize count() by LogType \n| top 10 by count_"
            },
            {
              "description": "Top 10 Users",
              "query": "SymantecEndpointProtection \n | summarize count() by UserName \n| top 10 by count_"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "write permission is required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "delete": true
                }
              }
            ],
            "customs": [
              {
                "name": "Symantec Endpoint Protection (SEP)",
                "description": "must be configured to export logs via Syslog"
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected which is deployed as part of the solution. To view the function code in Log Analytics, open Log Analytics/Microsoft Sentinel Logs blade, click Functions and search for the alias Symantec Endpoint Protection and load the function code or click [here](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Symantec%20Endpoint%20Protection/Parsers/SymantecEndpointProtection.txt), on the second line of the query, enter the hostname(s) of your SymantecEndpointProtection device(s) and any other unique identifiers for the logstream. The function usually takes 10-15 minutes to activate after solution installation/update."
            },
            {
              "description": "Typically, you should install the agent on a different computer from the one on which the logs are generated.\n\n>  Syslog logs are collected only from **Linux** agents.",
              "instructions": [
                {
                  "parameters": {
                    "title": "Choose where to install the agent:",
                    "instructionSteps": [
                      {
                        "title": "Install agent on Azure Linux Virtual Machine",
                        "description": "Select the machine to install the agent on and then click **Connect**.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxVirtualMachine"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      },
                      {
                        "title": "Install agent on a non-Azure Linux Machine",
                        "description": "Download the agent on the relevant machine and follow the instructions.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxNonAzure"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "InstructionStepsGroup"
                }
              ],
              "title": "1. Install and onboard the agent for Linux"
            },
            {
              "description": "Configure the facilities you want to collect and their severities.\n 1. Under workspace advanced settings **Configuration**, select **Data** and then **Syslog**.\n 2. Select **Apply below configuration to my machines** and select the facilities and severities.\n 3.  Click **Save**.",
              "instructions": [
                {
                  "parameters": {
                    "linkType": "OpenSyslogSettings"
                  },
                  "type": "InstallAgent"
                }
              ],
              "title": "2. Configure the logs to be collected"
            },
            {
              "description": "[Follow these instructions](https://techdocs.broadcom.com/us/en/symantec-security-software/endpoint-security-and-management/endpoint-protection/all/Monitoring-Reporting-and-Enforcing-Compliance/viewing-logs-v7522439-d37e464/exporting-data-to-a-syslog-server-v8442743-d15e1107.html) to configure the Symantec Endpoint Protection to forward syslog. Use the IP address or hostname for the Linux device with the Linux agent installed as the Destination IP address.",
              "title": "3. Configure and connect the Symantec Endpoint Protection"
            }
          ],
          "id": "[variables('_uiConfigId1')]",
          "additionalRequirementBanner": "These queries are dependent on a parser based on a Kusto Function deployed as part of the solution."
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "properties": {
        "description": "Symantec Endpoint Protection Workbook with template",
        "displayName": "Symantec Endpoint Protection workbook template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('workbookTemplateSpecName1'),'/',variables('workbookVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Workbook"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('workbookTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "SymantecEndpointProtectionWorkbook Workbook with template version 2.0.4",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "Sets the time name for analysis"
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"1f7d92a0-0398-464e-bda6-bb0d11882461\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000},\"value\":{\"durationMs\":43200000}}],\"style\":\"above\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 0\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"83ab456b-ee0f-4e43-b5e6-6f2c2b9dea20\",\"cellValue\":\"TabName\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Traffic Events\",\"subTarget\":\"TrafficEvents\",\"preText\":\"\",\"style\":\"link\"},{\"id\":\"5e6d0db1-203a-4308-a571-4631188565e0\",\"cellValue\":\"TabName\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Risk Events\",\"subTarget\":\"RiskEvents\",\"style\":\"link\"}]},\"name\":\"links - 3\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"548c3e58-0d78-4fff-b0e9-5b0a1b158704\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Action\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"SymantecEndpointProtection\\n| where LogType == \\\"Agent Traffic Logs\\\"\\n| distinct Action\\n| sort by Action asc\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"8dbe7459-bdfd-42cc-bcbd-cde0e186cb90\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TrafficUserNames\",\"label\":\"User Name\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"SymantecEndpointProtection\\r\\n| where LogType == \\\"Agent Traffic Logs\\\"\\r\\n| distinct UserName\\r\\n| sort by UserName asc\",\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"timeContext\":{\"durationMs\":3600000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"d97c02ea-a7c9-4b8e-b439-4c7f63efa510\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TrafficIps\",\"label\":\"Local IP Address\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"SymantecEndpointProtection\\r\\n| where LogType == \\\"Agent Traffic Logs\\\"\\r\\n| distinct LocalHostIpAddr\\r\\n| sort by LocalHostIpAddr asc\",\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"]},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"above\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"TrafficEvents\"},\"name\":\"parameters - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SymantecEndpointProtection\\r\\n| where LogType == \\\"Agent Traffic Logs\\\"\\r\\n| where Action in ({Action}) or '*' in ({Action})\\r\\n| where UserName in ({TrafficUserNames}) or '*' in ({TrafficUserNames})\\r\\n| where LocalHostIpAddr in ({TrafficIps}) or '*' in ({TrafficIps})\\r\\n| summarize Allowed = countif(Action == \\\"Allowed\\\"), Blocked = countif(Action == \\\"Blocked\\\") by bin(TimeGenerated,{TimeRange:grain})\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Total Events by Action over Time\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"timeBrushParameterName\":\"SelectedTimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"TrafficEvents\"},\"customWidth\":\"60\",\"name\":\"Total Events by Action over Time\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SymantecEndpointProtection\\r\\n| where LogType == \\\"Agent Traffic Logs\\\"\\r\\n| where Action in ({Action}) or '*' in ({Action})\\r\\n| where UserName in ({TrafficUserNames}) or '*' in ({TrafficUserNames})\\r\\n| where LocalHostIpAddr in ({TrafficIps}) or '*' in ({TrafficIps})\\r\\n| summarize count() by Action\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Total Events by Action\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"timeBrushParameterName\":\"SelectedTimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"TrafficEvents\"},\"customWidth\":\"40\",\"name\":\"Total Events by Action\",\"styleSettings\":{\"margin\":\"40\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SymantecEndpointProtection\\r\\n| where LogType == \\\"Agent Traffic Logs\\\"\\r\\n| where Action in ({Action}) or '*' in ({Action})\\r\\n| where UserName in ({TrafficUserNames}) or '*' in ({TrafficUserNames})\\r\\n| where LocalHostIpAddr in ({TrafficIps}) or '*' in ({TrafficIps})\\r\\n| summarize count() by LocalHostIpAddr, bin(TimeGenerated,{TimeRange:grain})\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Total Events by IP Address over Time\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"timeBrushParameterName\":\"SelectedTimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"TrafficEvents\"},\"customWidth\":\"60\",\"name\":\"Total Events by IP Address over Time\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SymantecEndpointProtection\\r\\n| where LogType == \\\"Agent Traffic Logs\\\"\\r\\n| where Action in ({Action}) or '*' in ({Action})\\r\\n| where UserName in ({TrafficUserNames}) or '*' in ({TrafficUserNames})\\r\\n| where LocalHostIpAddr in ({TrafficIps}) or '*' in ({TrafficIps})\\r\\n| summarize Total = count() by LocalHostIpAddr\\r\\n| project-rename ['IP Address'] = LocalHostIpAddr\\r\\n| top 10 by Total\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top 10 IP Addresses\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"timeBrushParameterName\":\"SelectedTimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Total\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":false}}}]}},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"TrafficEvents\"},\"customWidth\":\"40\",\"name\":\"Top 10 IP Addresses\",\"styleSettings\":{\"margin\":\"40\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SymantecEndpointProtection\\r\\n| where LogType == \\\"Agent Traffic Logs\\\"\\r\\n| where Action in ({Action}) or '*' in ({Action})\\r\\n| where UserName in ({TrafficUserNames}) or '*' in ({TrafficUserNames})\\r\\n| where LocalHostIpAddr in ({TrafficIps}) or '*' in ({TrafficIps})\\r\\n| summarize count() by UserName, bin(TimeGenerated,{TimeRange:grain})\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Total Events by User over Time\",\"timeContext\":{\"durationMs\":86400000},\"timeBrushParameterName\":\"SelectedTimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"TrafficEvents\"},\"customWidth\":\"60\",\"name\":\"Total Events by User over Time\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SymantecEndpointProtection\\r\\n| where LogType == \\\"Agent Traffic Logs\\\"\\r\\n| where Action in ({Action}) or '*' in ({Action})\\r\\n| where UserName in ({TrafficUserNames}) or '*' in ({TrafficUserNames})\\r\\n| where LocalHostIpAddr in ({TrafficIps}) or '*' in ({TrafficIps})\\r\\n| summarize Total = count() by UserName\\r\\n| top 10 by Total\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top 10 User Names\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"timeBrushParameterName\":\"SelectedTimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Total\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":false}}}]}},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"TrafficEvents\"},\"customWidth\":\"40\",\"name\":\"Top 10 User Names\",\"styleSettings\":{\"margin\":\"40\"}},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"9fb20767-f8b7-4558-90b9-e8b9e3c5ec7f\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"RiskCategory\",\"label\":\"Risk Category\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"SymantecEndpointProtection\\n| where LogType == \\\"Agent Risk Logs\\\"\\n| distinct CategorySet\\n| sort by CategorySet asc\",\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"timeContext\":{\"durationMs\":1800000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"cd01c3ca-efe4-4a4a-93ec-b89f6ceeec84\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"RiskNames\",\"label\":\"Risk Name\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"SymantecEndpointProtection\\n| where LogType == \\\"Agent Risk Logs\\\"\\n| distinct RiskName\\n| sort by RiskName\",\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"]},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"cdb8e863-b200-4b34-a605-d5b5eb635add\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"UserNames\",\"label\":\"User Name\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"SymantecEndpointProtection\\n| where LogType == \\\"Agent Risk Logs\\\"\\n| distinct UserName\\n| sort by UserName asc\",\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"timeContext\":{\"durationMs\":1800000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"fb274685-dc71-4721-8191-85735fc095c9\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"IPAddress\",\"label\":\"IP Address\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"SymantecEndpointProtection\\n| where LogType == \\\"Agent Risk Logs\\\"\\n| distinct SrcIpAddr\\n| sort by SrcIpAddr asc\",\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"]},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"a685767f-1c2b-4bfc-8ea2-5c1aca57b6ab\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Hostnames\",\"label\":\"Hostname\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"SymantecEndpointProtection\\n| where LogType == \\\"Agent Risk Logs\\\"\\n| distinct SrcHostName\\n| sort by SrcHostName asc\",\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"]},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"above\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"RiskEvents\"},\"name\":\"parameters - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SymantecEndpointProtection\\n| where LogType == \\\"Agent Risk Logs\\\"\\n| where CategorySet in ({RiskCategory}) or '*' in ({RiskCategory})\\n| where RiskName in ({RiskNames}) or '*' in ({RiskNames})\\n| where UserName in ({UserNames}) or '*' in ({UserNames})\\n| where SrcIpAddr in ({IPAddress}) or '*' in ({IPAddress})\\n| where SrcHostName in ({Hostnames}) or '*' in ({Hostnames})\\n| summarize count() by CategorySet, bin(TimeGenerated, {TimeRange:grain})\",\"size\":0,\"showAnalytics\":true,\"title\":\"Total Events by Risk Category over Time\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"timeBrushParameterName\":\"SelectedTimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"categoricalbar\"},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"RiskEvents\"},\"customWidth\":\"60\",\"name\":\"Total Events by Risk Category over Time\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SymantecEndpointProtection\\n| where LogType == \\\"Agent Risk Logs\\\"\\n| where CategorySet in ({RiskCategory}) or '*' in ({RiskCategory})\\n| where RiskName in ({RiskNames}) or '*' in ({RiskNames})\\n| where UserName in ({UserNames}) or '*' in ({UserNames})\\n| where SrcIpAddr in ({IPAddress}) or '*' in ({IPAddress})\\n| where SrcHostName in ({Hostnames}) or '*' in ({Hostnames})\\n| summarize count() by CategorySet\",\"size\":0,\"showAnalytics\":true,\"title\":\"Total Events by Risk Category\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"RiskEvents\"},\"customWidth\":\"40\",\"name\":\"Total Events by Risk Category\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SymantecEndpointProtection\\n| where LogType == \\\"Agent Risk Logs\\\"\\n| where CategorySet in ({RiskCategory}) or '*' in ({RiskCategory})\\n| where RiskName in ({RiskNames}) or '*' in ({RiskNames})\\n| where UserName in ({UserNames}) or '*' in ({UserNames})\\n| where SrcIpAddr in ({IPAddress}) or '*' in ({IPAddress})\\n| where SrcHostName in ({Hostnames}) or '*' in ({Hostnames})\\n| summarize Total = count() by RiskName\\n| top 10 by Total\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top 10 Risk Name\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Total\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":false}}}]}},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"RiskEvents\"},\"customWidth\":\"40\",\"name\":\"Top 10 Risk Name\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SymantecEndpointProtection\\n| where LogType == \\\"Agent Risk Logs\\\"\\n| where CategorySet in ({RiskCategory}) or '*' in ({RiskCategory})\\n| where RiskName in ({RiskNames}) or '*' in ({RiskNames})\\n| where UserName in ({UserNames}) or '*' in ({UserNames})\\n| where SrcIpAddr in ({IPAddress}) or '*' in ({IPAddress})\\n| where SrcHostName in ({Hostnames}) or '*' in ({Hostnames})\\n| summarize count() by RiskName, bin(TimeGenerated, {TimeRange:grain})\",\"size\":0,\"showAnalytics\":true,\"title\":\"Total Events by Risk Name over Time\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"timeBrushParameterName\":\"SelectedTimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"categoricalbar\"},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"RiskEvents\"},\"customWidth\":\"60\",\"name\":\"Total Events by Risk Name over Time\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SymantecEndpointProtection\\n| where LogType == \\\"Agent Risk Logs\\\"\\n| where CategorySet in ({RiskCategory}) or '*' in ({RiskCategory})\\n| where RiskName in ({RiskNames}) or '*' in ({RiskNames})\\n| where UserName in ({UserNames}) or '*' in ({UserNames})\\n| where SrcIpAddr in ({IPAddress}) or '*' in ({IPAddress})\\n| where SrcHostName in ({Hostnames}) or '*' in ({Hostnames})\\n| summarize count() by SrcIpAddr, bin(TimeGenerated, {TimeRange:grain})\",\"size\":0,\"showAnalytics\":true,\"title\":\"Total Events by IP Address over Time\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"timeBrushParameterName\":\"SelectedTimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"categoricalbar\"},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"RiskEvents\"},\"customWidth\":\"60\",\"name\":\"Total Events by IP Address over Time\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SymantecEndpointProtection\\n| where LogType == \\\"Agent Risk Logs\\\"\\n| where CategorySet in ({RiskCategory}) or '*' in ({RiskCategory})\\n| where RiskName in ({RiskNames}) or '*' in ({RiskNames})\\n| where UserName in ({UserNames}) or '*' in ({UserNames})\\n| where SrcIpAddr in ({IPAddress}) or '*' in ({IPAddress})\\n| where SrcHostName in ({Hostnames}) or '*' in ({Hostnames})\\n| summarize Total = count() by SrcIpAddr, SrcHostName\\n| project-rename ['Source IP'] = SrcIpAddr, Hostname = SrcHostName\\n| top 10 by Total\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top 10 IP Addresses\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Total\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":false}}}]}},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"RiskEvents\"},\"customWidth\":\"40\",\"name\":\"Top 10 IP Addresses\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SymantecEndpointProtection\\n| where LogType == \\\"Agent Risk Logs\\\"\\n| where CategorySet in ({RiskCategory}) or '*' in ({RiskCategory})\\n| where RiskName in ({RiskNames}) or '*' in ({RiskNames})\\n| where UserName in ({UserNames}) or '*' in ({UserNames})\\n| where SrcIpAddr in ({IPAddress}) or '*' in ({IPAddress})\\n| where SrcHostName in ({Hostnames}) or '*' in ({Hostnames})\\n| summarize count() by UserName, bin(TimeGenerated, {TimeRange:grain})\",\"size\":0,\"showAnalytics\":true,\"title\":\"Total Events by User over Time\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"timeBrushParameterName\":\"SelectedTimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"categoricalbar\"},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"RiskEvents\"},\"customWidth\":\"60\",\"name\":\"Total Events by User over Time\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SymantecEndpointProtection\\n| where LogType == \\\"Agent Risk Logs\\\"\\n| where CategorySet in ({RiskCategory}) or '*' in ({RiskCategory})\\n| where RiskName in ({RiskNames}) or '*' in ({RiskNames})\\n| where UserName in ({UserNames}) or '*' in ({UserNames})\\n| where SrcIpAddr in ({IPAddress}) or '*' in ({IPAddress})\\n| where SrcHostName in ({Hostnames}) or '*' in ({Hostnames})\\n| summarize Total = count() by UserName\\n| top 10 by Total\",\"size\":0,\"showAnalytics\":true,\"title\":\"Top 10 User Names\",\"timeContext\":{\"durationMs\":43200000},\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Total\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"useGrouping\":false}}}]}},\"conditionalVisibility\":{\"parameterName\":\"TabName\",\"comparison\":\"isEqualTo\",\"value\":\"RiskEvents\"},\"customWidth\":\"40\",\"name\":\"Top 10 User Names\"}],\"fallbackResourceIds\":[\"/subscriptions/7ac4b7c7-65f2-46c7-87bb-ca6ac8e5dbef/resourcegroups/socaas-rg/providers/microsoft.operationalinsights/workspaces/toncoso\"],\"fromTemplateId\":\"sentinel-SymantecEndpointProtection\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=SymantecEndpointProtection; logoFileName=symantec_logo.svg; description=Sets the time name for analysis; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=Symantec Endpoint Protection; templateRelativePath=SymantecEndpointProtection.json; subtitle=; provider=Symantec}.description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Symantec Endpoint Protection",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "SymantecEndpointProtection",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "SymantecEndpointProtection",
                      "kind": "DataConnector"
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs",
      "apiVersion": "2021-05-01",
      "name": "[variables('parserTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "properties": {
        "description": "SymantecEndpointProtection Data Parser with template",
        "displayName": "SymantecEndpointProtection Data Parser template"
      }
    },
    {
      "type": "Microsoft.Resources/templateSpecs/versions",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('parserTemplateSpecName1'),'/',variables('parserVersion1'))]",
      "location": "[parameters('workspace-location')]",
      "tags": {
        "hidden-sentinelWorkspaceId": "[variables('workspaceResourceId')]",
        "hidden-sentinelContentType": "Parser"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/templateSpecs', variables('parserTemplateSpecName1'))]"
      ],
      "properties": {
        "description": "SymantecEndpointProtection Data Parser with template version 2.0.4",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName1')]",
              "apiVersion": "2020-08-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "SymantecEndpointProtection",
                "category": "Samples",
                "functionAlias": "SymantecEndpointProtection",
                "query": "\nSyslog\r\n| where Computer in (\"server1\", \"server2\") // server1 and server2 are examples, replace this list with your SEP device names\r\n| extend ServerName = extract(@\"^([\\w\\-\\_]+)?(,|\\Site:)\",1,SyslogMessage)\r\n| extend AdministrativeLogsParser = iif(SyslogMessage has (\"Admin:\"), extract_all(@\"Site:\\s([^,]+)\\,Server\\sName\\:\\s([^,]+)\\,Domain\\sName\\:\\s([^,]+)?\\,Admin\\:\\s([^,]+)?\\,Event\\sDescription\\:\\s([^#]+)?(#|$)\",dynamic([1,2,3,4,5,6,7]), SyslogMessage)[0], dynamic(\"\"))\r\n| extend LogType = iif(isnotempty(AdministrativeLogsParser),\"Administrative Logs\", \"\")\r\n| extend AgentSystemLogsParser = iif(SyslogMessage has (\"Category:\"),extract_all(@'^([^,]+)\\,Category:\\s([\\d]+)\\,([^,]+)\\,\\\"?Event\\sDescription:\\s([^,]+\\\"?)(\\,Event time:\\s([^,]+)\\,Group Name:\\s([^,]+)$?)?',dynamic([1,2,3,4,6,7]), SyslogMessage)[0], dynamic(\"\"))\r\n| extend LogType = iif(isempty(LogType) and isnotempty(AgentSystemLogsParser),\"Agent System Logs\",LogType)\r\n| extend AgentActivityLogsParser = iif(SyslogMessage has_all (\"Site:\",\"Server Name:\", \",Domain Name:\"),extract_all(@\"Site:\\s([^,]+)\\,Server\\sName\\:\\s([^,]+)\\,Domain\\sName\\:\\s([^,]+)?\\,([^,]+)?\\,([^,]+)?\\,([^,]+)?\\,([^,]+)?\",dynamic([1,2,3,4,5,6,7]), SyslogMessage)[0], dynamic(\"\"))\r\n| extend LogType = iif(isempty(LogType) and isnotempty(AgentActivityLogsParser),\"Agent Activity Logs\", LogType)\r\n| extend AgentBehaviorLogsParser = iif(SyslogMessage has (\"Begin:\"), extract_all(@\"^([^,]+)?\\,([^,]+)?\\,([^,]+)?\\,([^,]+)?\\,([^,]+)?\\,Begin:\\s([^,]+)?\\,End Time:\\s([^,]+)?\\,Rule:\\s([^,]+)?\\,(\\d+)?\\,([^,]+)?\\,([\\S\\s]+)\",dynamic([1,2,3,4,5,6,7,8,9,10,11]),SyslogMessage)[0], dynamic(\"\"))\r\n| extend AgentBehaviorLogsSubstring = tostring(AgentBehaviorLogsParser[10])\r\n| extend AgentBehaviorLogsParser2 = iif(SyslogMessage has_all (\"User Name:\",\"Domain Name:\", \"Action Type:\"),extract_all(@\"([^,]+)?\\,([^,]+)?\\,User Name:\\s([^,]+)?\\,Domain Name:\\s([^,]+)?\\,Action Type:\\s([^,]+)?\\,File size \\(bytes\\):\\s(\\d+)?\\,Device ID:\\s([^,]+)?\",dynamic([1,2,3,4,5,6,7,8]),AgentBehaviorLogsSubstring)[0], dynamic(\"\"))\r\n| extend LogType = iif(isempty(LogType) and isnotempty(AgentBehaviorLogsParser) and isnotempty(AgentBehaviorLogsParser2),\"Agent Behavior Logs\",LogType)\r\n| extend AgentTrafficLogsParser = iif(SyslogMessage has (\"Local Host IP:\"),extract_all(@\"^([^,]+)\\,Local Host IP:\\s([^,]+)?\\,Local Port:\\s([^,]+)?\\,Local Host MAC:\\s([^,]+)?\\,Remote Host IP:\\s([^,]+)?\\,Remote Host Name:\\s([^,]+)?\\,Remote Port:\\s([^,]+)?\\,Remote Host MAC:\\s([^,]+)?\\,([^,]+)?\\,([^,]+)?\\,Begin:\\s([^,]+)?\\,End Time:\\s([^,]+)?\\,([\\s\\S]+)\",dynamic([1,2,3,4,5,6,7,8,9,10,11,12,13]),SyslogMessage)[0], dynamic(\"\"))\r\n| extend AgentTrafficLogsSubstring  = tostring(AgentTrafficLogsParser[12])\r\n| extend AgentTrafficLogsParser2 = iif(SyslogMessage has(\"Occurrences:\"),extract_all(@\"Occurrences:\\s([^,]+)?\\,Application:\\s([^,]+)?\\,Rule:\\s([^,]+)?\\,Location:\\s([^,]+)?\\,User Name:\\s([^,]+)?\\,Domain Name:\\s([^,]+)?\\,Action:\\s([^,]+)?\\,SHA-256:\\s([^,]+)?\\,MD-5:\\s([^,]+)?\",dynamic([1,2,3,4,5,6,7,8,9,10,11,12]),AgentTrafficLogsSubstring)[0], dynamic(\"\"))\r\n| extend LogType = iif(isempty(LogType) and isnotempty(AgentTrafficLogsParser) and isnotempty(AgentTrafficLogsParser2),\"Agent Traffic Logs\",LogType)\r\n| extend AgentSecurityLogsParser = iif(SyslogMessage has (\"Local Host IP:\"),extract_all(@'^([^,]+)\\,(Event Description:\\s([^,]+)?|\\\"Event Description:\\s([^\"]+)?\\\")\\,Local Host IP:\\s([^,]+)?\\,Local Host MAC:\\s([^,]+)?\\,Remote Host Name:\\s([^,]+)?\\,Remote Host IP:\\s([^,]+)?\\,Remote Host MAC:\\s([^,]+)?\\,([^,]+)?\\,([^,]+)?\\,(Intrusion ID:\\s)?([^,]+)?\\,Begin:\\s([^,]+)?\\,End Time:\\s([^,]+)?\\,([\\s\\S]+)',dynamic([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]),SyslogMessage)[0], dynamic(\"\"))\r\n| extend  AgentSecurityLogsSubstring = tostring(AgentSecurityLogsParser[15])\r\n| extend AgentSecurityLogsParser2 = iif(SyslogMessage has (\"CIDS Signature SubID\"), extract_all(@'Occurrences:\\s([^,]+)?\\,Application:\\s([^,]+)?\\,Location:\\s([^,]+)?\\,User Name:\\s([^,]+)?\\,Domain Name:\\s([^,]+)?\\,Local Port:\\s([^,]+)?\\,Remote Port:\\s([^,]+)?\\,CIDS Signature ID:\\s([^,]+)?\\,CIDS Signature string:\\s([^,]+)?\\,CIDS Signature SubID:\\s([^,]+)?\\,\\\"?Intrusion URL:\\s([^\\,]+|[^\\\"]+)?\\\"?\\,Intrusion Payload URL:\\s([^,]+)?\\,SHA-256:\\s([^,]+)?\\,MD-5:\\s([^,]+)?',dynamic([1,2,3,4,5,6,7,8,9,10,11,12,13]),AgentSecurityLogsSubstring)[0],dynamic(\"\"))\r\n| extend LogType = iif(isempty(LogType) and isnotempty(AgentSecurityLogsParser) and isnotempty(AgentSecurityLogsParser2),\"Agent Security Logs\",LogType)\r\n| extend AgentPacketLogsParser = iif(SyslogMessage has (\"Local Host IP:\"), extract_all(@\"Local Host IP:\\s([^,]+)?\\,Local Port:\\s([^,]+)?\\,Remote Host IP:\\s([^,]+)?\\,Remote Host Name:\\s([^,]+)?\\,Remote Port:\\s([^,]+)?\\,([^,]+)?\\,Application:\\s([^,]+)?\\,Action:\\s([^,]+)?\\,\",dynamic([1,2,3,4,5,6,7]), SyslogMessage)[0], dynamic(\"\"))\r\n| extend LogType = iif(isempty(LogType) and isnotempty(AgentPacketLogsParser),\"Agent Packet Logs\",LogType)\r\n| extend AgentRiskLogsParser = iif(SyslogMessage has \"Risk name:\", extract_all(@'^([^,]+)\\,IP Address:\\s([^,]+)?\\,Computer name:\\s([^,]+)?\\,Source:\\s([^,]+)?\\,Risk name:\\s([^,]+)?\\,Occurrences:\\s([^,]+)?\\,(File path:\\s([^,]+)?|File path:\\s\\\"([^\"]+)\\\"?\\\")\\,Description:\\s([^,]+)?\\,Actual action:\\s([^,]+)?\\,Requested action:\\s([^,]+)?\\,Secondary action:\\s([^,]+)?\\,Event time:\\s([^,]+)?\\,Event Insert Time:\\s([^,]+)?\\,([\\s\\S]+)',dynamic([1,2,3,4,5,6,8,9,10,11,12,13,14,15,16]), SyslogMessage)[0], dynamic (\"\"))\r\n| extend AgentRiskLogsSubstring  = tostring(AgentRiskLogsParser[14])\r\n| extend AgentRiskLogsParser2 = iif(SyslogMessage has (\"URL Tracking Status:\"), extract_all(@\"^End Time:\\s([^,]+)?\\,Last update time:\\s([^,]+)?\\,Domain Name:\\s([^,]+)?\\,Group Name:\\s([^,]+)?\\,Server Name:\\s([^,]+)?\\,User Name:\\s([^,]+)?\\,Source Computer Name:\\s([^,]+)?\\,Source Computer IP:\\s([^,]+)?\\,Disposition:\\s([^,]+)?\\,Download site:\\s([^,]+)?\\,Web domain:\\s([^,]+)?\\,Downloaded by:\\s([^,]+)?\\,Prevalence:\\s([^,]+)?\\,Confidence:\\s([^,]+)?\\,URL Tracking Status:\\s([^,]+)?\\,([\\s\\S]+)\",dynamic([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]),AgentRiskLogsSubstring)[0], dynamic(\"\"))\r\n| extend AgentRiskLogsSubstring2  = tostring(AgentRiskLogsParser2[15])\r\n| extend AgentRiskLogsParser3 = iif(SyslogMessage has (\"Sensitivity:\"), extract_all(@\"^First Seen:\\s([^,]+)?\\,Sensitivity:\\s([^,]+)?\\,Permitted application reason:\\s([^,]+)?\\,Application hash:\\s([^,]+)?\\,Hash type:\\s([^,]+)?\\,Company name:\\s([^,]+)?\\,Application name:\\s([^,]+)?\\,Application version:\\s([^,]+)?\\,Application type:\\s([^,]+)?\\,File size \\(bytes\\):\\s([^,]+)?\\,Category set:\\s([^,]+)?\\,Category type:\\s([^,]+)?\\,Location:\\s([^,]+)?\\,Intensive Protection Level:\\s([^,]+)?\\,Certificate issuer:\\s([^,]+)?\\,([\\s\\S]+)\",dynamic([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]),AgentRiskLogsSubstring2)[0], dynamic(\"\"))\r\n| extend AgentRiskLogsSubstring3  = tostring(AgentRiskLogsParser3[15])\r\n| extend AgentRiskLogsParser4 = iif(SyslogMessage has (\"Certificate signer:\"), extract_all(@\"^Certificate signer:\\s([^,]+)?\\,Certificate thumbprint:\\s([^,]+)?\\,Signing timestamp:\\s([^,]+)?\\,Certificate serial number:\\s([^,]+)?(\\,|$)\",dynamic([1,2,3,4]),AgentRiskLogsSubstring3)[0], dynamic(\"\"))\r\n| extend SiteName = case(LogType has \"Administrative Logs\", tostring(AdministrativeLogsParser[0]),\r\n            LogType has \"Agent Activity Logs\", tostring(AgentActivityLogsParser[0]), \"\"),\r\n         ServerName = case(LogType has \"Administrative Logs\", tostring(AdministrativeLogsParser[1]),\r\n            LogType has \"Agent Risk Logs\", tostring(AgentRiskLogsParser2[4]), \"\"),\r\n         DomainName = case(LogType has \"Administrative Logs\", tostring(AdministrativeLogsParser[2]),\r\n            LogType has \"Agent Activity Logs\", tostring(AgentActivityLogsParser[6]), \r\n            LogType has \"Agent Behavior Logs\", tostring(AgentBehaviorLogsParser2[4]), \r\n            LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser2[5]), \r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser2[4]), \r\n            LogType has \"Agent Risk Logs\", tostring(AgentRiskLogsParser2[2]), \"\"),\r\n         AdminName = tostring(AdministrativeLogsParser[3]),\r\n         EventDescription = case(LogType has \"Administrative Logs\", tostring(AdministrativeLogsParser[4]),\r\n            LogType has \"Agent System Logs\", tostring(AgentSystemLogsParser[3]), \r\n            LogType has \"Agent Activity Logs\", tostring(AgentActivityLogsParser[3]), \r\n            LogType has \"Agent Behavior Logs\", extract(@\"([\\S\\s]+)\\-\\sCaller\\sMD5\",1,tostring(AgentBehaviorLogsParser[3])),\r\n            LogType has \"Agent Security Logs\", iif(isempty(tostring(AgentSecurityLogsParser[2])),tostring(AgentSecurityLogsParser[3]),tostring(AgentSecurityLogsParser[2])), LogType has \"Agent System Logs\", tostring(AgentSystemLogsParser[3]),\r\n            LogType has \"Agent Risk Logs\", tostring(AgentRiskLogsParser[8]), \"\"),\r\n         Category = toint(AgentSystemLogsParser[1]),\r\n         EventSource = tostring(AgentSystemLogsParser[2]),\r\n         EventTimestamp = tostring(AgentSystemLogsParser[4]),\r\n         GroupName = case(LogType has \"Agent System Logs\", tostring(AgentSystemLogsParser[5]),\r\n            LogType has \"Agent Risk Logs\", tostring(AgentRiskLogsParser2[3]), \"\"),\r\n         SEPMDomainName = tostring(AgentActivityLogsParser[2]),\r\n         HostName = tostring(AgentActivityLogsParser[4]),\r\n         UserName = case(LogType has \"Agent Activity Logs\", tostring(AgentActivityLogsParser[5]),\r\n            LogType has \"Agent Behavior Logs\", tostring(AgentBehaviorLogsParser2[3]), \r\n            LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser2[4]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser2[3]), \r\n            LogType has \"Agent Risk Logs\", tostring(AgentRiskLogsParser2[5]),\"\"),\r\n         IpAddr = tostring(AgentBehaviorLogsParser[1]),\r\n         Action = case(LogType has \"Agent Behavior Logs\", tostring(AgentBehaviorLogsParser[2]),\r\n            LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser2[6]), \r\n            LogType has \"Agent Packet Logs\", tostring(AgentPacketLogsParser[6]), \r\n            LogType has \"Agent Risk Logs\", tostring(AgentRiskLogsParser[0]), \"\"),\r\n         CallerMD5Hash = extract(@\"Caller\\sMD5\\=(\\S+)\",1,tostring(AgentBehaviorLogsParser[3])),\r\n         ApiName = tostring(AgentBehaviorLogsParser[4]),\r\n         EventStartTime = case(LogType has \"Agent Behavior Logs\", todatetime(AgentBehaviorLogsParser[5]),\r\n            LogType has \"Agent Traffic Logs\", todatetime(AgentTrafficLogsParser[10]), \r\n            LogType has \"Agent Security Logs\", todatetime(AgentSecurityLogsParser[13]), \r\n            LogType has \"Agent Risk Logs\", todatetime(AgentRiskLogsParser[12]), datetime(null)),\r\n         EventEndTime = case(LogType has \"Agent Behavior Logs\", todatetime(AgentBehaviorLogsParser[6]),\r\n            LogType has \"Agent Traffic Logs\", todatetime(AgentTrafficLogsParser[11]), \r\n            LogType has \"Agent Security Logs\", todatetime(AgentSecurityLogsParser[14]), \r\n            LogType has \"Agent Risk Logs\", todatetime(AgentRiskLogsParser[14]), \r\n            LogType has \"Agent Risk Logs\", todatetime(AgentRiskLogsParser2[0]), datetime(null)),\r\n         SecurityRuleName = tostring(AgentBehaviorLogsParser[7]),\r\n         CallerProcessId = toint(AgentBehaviorLogsParser[8]),\r\n         CallerProcessName = tostring(AgentBehaviorLogsParser[9]),\r\n         AgentBehaviorLogsSubstring = tostring(AgentBehaviorLogsParser[10]),\r\n         CallerReturnAddr = tostring(AgentBehaviorLogsParser2[0]),\r\n         CallerReturnModuleName = tostring(AgentBehaviorLogsParser2[1]),\r\n         Parameters = tostring(AgentBehaviorLogsParser2[2]),\r\n         ActionType = tostring(AgentBehaviorLogsParser2[5]),\r\n         FileSize = case(LogType has \"Agent Behavior Logs\", toint(AgentBehaviorLogsParser2[6]),\r\n            LogType has \"Agent Risk Logs\", toint(AgentRiskLogsParser3[9]), int(null)),\r\n         DeviceId = tostring(AgentBehaviorLogsParser2[7]),\r\n         LocalHostIpAddr = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser[1]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser[4]), \r\n            LogType has \"Agent Packet Logs\", tostring(AgentPacketLogsParser[0]), \"\"),\r\n         LocalPortNumber = case(LogType has \"Agent Traffic Logs\", toint(AgentTrafficLogsParser[2]),\r\n            LogType has \"Agent Security Logs\", toint(AgentSecurityLogsParser2[5]), \r\n            LogType has \"Agent Packet Logs\", toint(AgentPacketLogsParser[1]), int(null)),\r\n         LocalHostMacAddr = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser[3]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser[5]), \"\"),\r\n         RemoteHostIpAddr = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser[4]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser[7]), \r\n            LogType has \"Agent Packet Logs\", tostring(AgentPacketLogsParser[2]), \"\"),\r\n         RemoteHostName = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser[5]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser[6]), \r\n            LogType has \"Agent Packet Logs\", tostring(AgentPacketLogsParser[3]), \"\"),\r\n         RemotePortNumber = case(LogType has \"Agent Traffic Logs\", toint(AgentTrafficLogsParser[6]),\r\n            LogType has \"Agent Security Logs\", toint(AgentSecurityLogsParser2[6]), \r\n            LogType has \"Agent Packet Logs\", toint(AgentPacketLogsParser[4]), int(null)),\r\n         RemoteHostMacAddr = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser[7]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser[8]), \"\"),\r\n         NetworkProtocol = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser[8]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser[10]), \"\"),\r\n         TrafficDirection = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser[9]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser[9]), \"\"),\r\n         AgentTrafficLogsSubstring  = tostring(AgentTrafficLogsParser[12]),\r\n         Occurrences = case(LogType has \"Agent Traffic Logs\", toint(AgentTrafficLogsParser2[0]),\r\n            LogType has \"Agent Security Logs\", toint(AgentSecurityLogsParser2[0]), \r\n            LogType has \"Agent Risk Logs\", toint(AgentRiskLogsParser[5]), int(null)),\r\n         ApplicationName = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser2[1]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser2[0]), \r\n            LogType has \"Agent Risk Logs\", AgentRiskLogsParser3[6], \"\"),\r\n         RuleName = tostring(AgentTrafficLogsParser2[2]),\r\n         Location = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser2[3]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser2[2]), \r\n            LogType has \"Agent Risk Logs\", tostring(AgentRiskLogsParser3[12]), \"\"),\r\n         Sha256 = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser2[8]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser2[11]), \"\"),\r\n         Md5 = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser2[10]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser2[12]), \"\"),\r\n         IntrusionId = tostring(AgentSecurityLogsParser[11]),\r\n         CidsSignatureId = tostring(AgentSecurityLogsParser2[7]),\r\n         CidsSignatureString = tostring(AgentSecurityLogsParser2[8]),\r\n         CidsSignatureSubId = toint(AgentSecurityLogsParser2[9]),\r\n         IntrusionUrl = tostring(AgentSecurityLogsParser2[10]),\r\n         Application = tostring(AgentPacketLogsParser[5]),\r\n         SrcIpAddr = tostring(AgentRiskLogsParser[1]),\r\n         SrcHostName = tostring(AgentRiskLogsParser[2]),\r\n         Source = tostring(AgentRiskLogsParser[3]),\r\n         RiskName = tostring(AgentRiskLogsParser[4]),\r\n         FilePath = iif(isempty(tostring(AgentRiskLogsParser[6])),tostring(AgentRiskLogsParser[7]),tostring(AgentRiskLogsParser[6])),\r\n         ActualAction = tostring(AgentRiskLogsParser[9]),\r\n         RequestedAction = tostring(AgentRiskLogsParser[10]),\r\n         SecondaryAction = tostring(AgentRiskLogsParser[11]),\r\n         EventInsertTime = todatetime(AgentRiskLogsParser[13]),\r\n         LastUpdateTime = todatetime(AgentRiskLogsParser2[1]),\r\n         SrcComputerName = tostring(AgentRiskLogsParser2[6]),\r\n         SrcComputerIpAddr = tostring(AgentRiskLogsParser2[7]),\r\n         Disposition = tostring(AgentRiskLogsParser2[8]),\r\n         DownloadSite = tostring(AgentRiskLogsParser2[9]),\r\n         WebDomain = tostring(AgentRiskLogsParser2[10]),\r\n         DownloadedBy = tostring(AgentRiskLogsParser2[11]),\r\n         Prevalence = tostring(AgentRiskLogsParser2[12]),\r\n         Confidence = tostring(AgentRiskLogsParser2[13]),\r\n         UrlTrackingStatus = tostring(AgentRiskLogsParser2[14]),\r\n         FirstSeen = tostring(AgentRiskLogsParser3[0]),\r\n         Sensitivity = tostring(AgentRiskLogsParser3[1]),\r\n         PermittedApplicationReason = tostring(AgentRiskLogsParser3[2]),\r\n         ApplicationHash = tostring(AgentRiskLogsParser3[3]),\r\n         HashType = tostring(AgentRiskLogsParser3[4]),\r\n         CompanyName = tostring(AgentRiskLogsParser3[5]),\r\n         ApplicationVersion = tostring(AgentRiskLogsParser3[7]),\r\n         ApplicationType = tostring(AgentRiskLogsParser3[8]),\r\n         CategorySet = tostring(AgentRiskLogsParser3[10]),\r\n         CategoryType = tostring(AgentRiskLogsParser3[11]),\r\n         IntensiveProtectionLevel = tostring(AgentRiskLogsParser3[13]),\r\n         CertificateIssuer = tostring(AgentRiskLogsParser3[14]),\r\n         CertificateSigner = tostring(AgentRiskLogsParser4[0]),\r\n         CertificateThumbprint = tostring(AgentRiskLogsParser4[1]),\r\n         SigningTimestamp = tostring(AgentRiskLogsParser4[2]),\r\n         CertificateSerialNumber = tostring(AgentRiskLogsParser4[3])\r\n| extend LogType = case(LogType !in (\"Agent System Logs\",\"Agent Activity Logs\",\"Agent Behavior Logs\", \"Agent Traffic Logs\",\"Agent Security Logs\", \"Agent Packet Logs\", \"Agent Risk Logs\", \"Administrative Logs\"), iif(isempty(LogType),\"Other\", LogType), LogType)\r\n| project-away *Parser*, *Substring*\r\n",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "SymantecEndpointProtection"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId1'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName1')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
                "contentId": "[variables('_parserContentId1')]",
                "kind": "Parser",
                "version": "[variables('parserVersion1')]",
                "source": {
                  "name": "Symantec Endpoint Protection",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2021-06-01",
      "name": "[variables('_parserName1')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "SymantecEndpointProtection",
        "category": "Samples",
        "functionAlias": "SymantecEndpointProtection",
        "query": "\nSyslog\r\n| where Computer in (\"server1\", \"server2\") // server1 and server2 are examples, replace this list with your SEP device names\r\n| extend ServerName = extract(@\"^([\\w\\-\\_]+)?(,|\\Site:)\",1,SyslogMessage)\r\n| extend AdministrativeLogsParser = iif(SyslogMessage has (\"Admin:\"), extract_all(@\"Site:\\s([^,]+)\\,Server\\sName\\:\\s([^,]+)\\,Domain\\sName\\:\\s([^,]+)?\\,Admin\\:\\s([^,]+)?\\,Event\\sDescription\\:\\s([^#]+)?(#|$)\",dynamic([1,2,3,4,5,6,7]), SyslogMessage)[0], dynamic(\"\"))\r\n| extend LogType = iif(isnotempty(AdministrativeLogsParser),\"Administrative Logs\", \"\")\r\n| extend AgentSystemLogsParser = iif(SyslogMessage has (\"Category:\"),extract_all(@'^([^,]+)\\,Category:\\s([\\d]+)\\,([^,]+)\\,\\\"?Event\\sDescription:\\s([^,]+\\\"?)(\\,Event time:\\s([^,]+)\\,Group Name:\\s([^,]+)$?)?',dynamic([1,2,3,4,6,7]), SyslogMessage)[0], dynamic(\"\"))\r\n| extend LogType = iif(isempty(LogType) and isnotempty(AgentSystemLogsParser),\"Agent System Logs\",LogType)\r\n| extend AgentActivityLogsParser = iif(SyslogMessage has_all (\"Site:\",\"Server Name:\", \",Domain Name:\"),extract_all(@\"Site:\\s([^,]+)\\,Server\\sName\\:\\s([^,]+)\\,Domain\\sName\\:\\s([^,]+)?\\,([^,]+)?\\,([^,]+)?\\,([^,]+)?\\,([^,]+)?\",dynamic([1,2,3,4,5,6,7]), SyslogMessage)[0], dynamic(\"\"))\r\n| extend LogType = iif(isempty(LogType) and isnotempty(AgentActivityLogsParser),\"Agent Activity Logs\", LogType)\r\n| extend AgentBehaviorLogsParser = iif(SyslogMessage has (\"Begin:\"), extract_all(@\"^([^,]+)?\\,([^,]+)?\\,([^,]+)?\\,([^,]+)?\\,([^,]+)?\\,Begin:\\s([^,]+)?\\,End Time:\\s([^,]+)?\\,Rule:\\s([^,]+)?\\,(\\d+)?\\,([^,]+)?\\,([\\S\\s]+)\",dynamic([1,2,3,4,5,6,7,8,9,10,11]),SyslogMessage)[0], dynamic(\"\"))\r\n| extend AgentBehaviorLogsSubstring = tostring(AgentBehaviorLogsParser[10])\r\n| extend AgentBehaviorLogsParser2 = iif(SyslogMessage has_all (\"User Name:\",\"Domain Name:\", \"Action Type:\"),extract_all(@\"([^,]+)?\\,([^,]+)?\\,User Name:\\s([^,]+)?\\,Domain Name:\\s([^,]+)?\\,Action Type:\\s([^,]+)?\\,File size \\(bytes\\):\\s(\\d+)?\\,Device ID:\\s([^,]+)?\",dynamic([1,2,3,4,5,6,7,8]),AgentBehaviorLogsSubstring)[0], dynamic(\"\"))\r\n| extend LogType = iif(isempty(LogType) and isnotempty(AgentBehaviorLogsParser) and isnotempty(AgentBehaviorLogsParser2),\"Agent Behavior Logs\",LogType)\r\n| extend AgentTrafficLogsParser = iif(SyslogMessage has (\"Local Host IP:\"),extract_all(@\"^([^,]+)\\,Local Host IP:\\s([^,]+)?\\,Local Port:\\s([^,]+)?\\,Local Host MAC:\\s([^,]+)?\\,Remote Host IP:\\s([^,]+)?\\,Remote Host Name:\\s([^,]+)?\\,Remote Port:\\s([^,]+)?\\,Remote Host MAC:\\s([^,]+)?\\,([^,]+)?\\,([^,]+)?\\,Begin:\\s([^,]+)?\\,End Time:\\s([^,]+)?\\,([\\s\\S]+)\",dynamic([1,2,3,4,5,6,7,8,9,10,11,12,13]),SyslogMessage)[0], dynamic(\"\"))\r\n| extend AgentTrafficLogsSubstring  = tostring(AgentTrafficLogsParser[12])\r\n| extend AgentTrafficLogsParser2 = iif(SyslogMessage has(\"Occurrences:\"),extract_all(@\"Occurrences:\\s([^,]+)?\\,Application:\\s([^,]+)?\\,Rule:\\s([^,]+)?\\,Location:\\s([^,]+)?\\,User Name:\\s([^,]+)?\\,Domain Name:\\s([^,]+)?\\,Action:\\s([^,]+)?\\,SHA-256:\\s([^,]+)?\\,MD-5:\\s([^,]+)?\",dynamic([1,2,3,4,5,6,7,8,9,10,11,12]),AgentTrafficLogsSubstring)[0], dynamic(\"\"))\r\n| extend LogType = iif(isempty(LogType) and isnotempty(AgentTrafficLogsParser) and isnotempty(AgentTrafficLogsParser2),\"Agent Traffic Logs\",LogType)\r\n| extend AgentSecurityLogsParser = iif(SyslogMessage has (\"Local Host IP:\"),extract_all(@'^([^,]+)\\,(Event Description:\\s([^,]+)?|\\\"Event Description:\\s([^\"]+)?\\\")\\,Local Host IP:\\s([^,]+)?\\,Local Host MAC:\\s([^,]+)?\\,Remote Host Name:\\s([^,]+)?\\,Remote Host IP:\\s([^,]+)?\\,Remote Host MAC:\\s([^,]+)?\\,([^,]+)?\\,([^,]+)?\\,(Intrusion ID:\\s)?([^,]+)?\\,Begin:\\s([^,]+)?\\,End Time:\\s([^,]+)?\\,([\\s\\S]+)',dynamic([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]),SyslogMessage)[0], dynamic(\"\"))\r\n| extend  AgentSecurityLogsSubstring = tostring(AgentSecurityLogsParser[15])\r\n| extend AgentSecurityLogsParser2 = iif(SyslogMessage has (\"CIDS Signature SubID\"), extract_all(@'Occurrences:\\s([^,]+)?\\,Application:\\s([^,]+)?\\,Location:\\s([^,]+)?\\,User Name:\\s([^,]+)?\\,Domain Name:\\s([^,]+)?\\,Local Port:\\s([^,]+)?\\,Remote Port:\\s([^,]+)?\\,CIDS Signature ID:\\s([^,]+)?\\,CIDS Signature string:\\s([^,]+)?\\,CIDS Signature SubID:\\s([^,]+)?\\,\\\"?Intrusion URL:\\s([^\\,]+|[^\\\"]+)?\\\"?\\,Intrusion Payload URL:\\s([^,]+)?\\,SHA-256:\\s([^,]+)?\\,MD-5:\\s([^,]+)?',dynamic([1,2,3,4,5,6,7,8,9,10,11,12,13]),AgentSecurityLogsSubstring)[0],dynamic(\"\"))\r\n| extend LogType = iif(isempty(LogType) and isnotempty(AgentSecurityLogsParser) and isnotempty(AgentSecurityLogsParser2),\"Agent Security Logs\",LogType)\r\n| extend AgentPacketLogsParser = iif(SyslogMessage has (\"Local Host IP:\"), extract_all(@\"Local Host IP:\\s([^,]+)?\\,Local Port:\\s([^,]+)?\\,Remote Host IP:\\s([^,]+)?\\,Remote Host Name:\\s([^,]+)?\\,Remote Port:\\s([^,]+)?\\,([^,]+)?\\,Application:\\s([^,]+)?\\,Action:\\s([^,]+)?\\,\",dynamic([1,2,3,4,5,6,7]), SyslogMessage)[0], dynamic(\"\"))\r\n| extend LogType = iif(isempty(LogType) and isnotempty(AgentPacketLogsParser),\"Agent Packet Logs\",LogType)\r\n| extend AgentRiskLogsParser = iif(SyslogMessage has \"Risk name:\", extract_all(@'^([^,]+)\\,IP Address:\\s([^,]+)?\\,Computer name:\\s([^,]+)?\\,Source:\\s([^,]+)?\\,Risk name:\\s([^,]+)?\\,Occurrences:\\s([^,]+)?\\,(File path:\\s([^,]+)?|File path:\\s\\\"([^\"]+)\\\"?\\\")\\,Description:\\s([^,]+)?\\,Actual action:\\s([^,]+)?\\,Requested action:\\s([^,]+)?\\,Secondary action:\\s([^,]+)?\\,Event time:\\s([^,]+)?\\,Event Insert Time:\\s([^,]+)?\\,([\\s\\S]+)',dynamic([1,2,3,4,5,6,8,9,10,11,12,13,14,15,16]), SyslogMessage)[0], dynamic (\"\"))\r\n| extend AgentRiskLogsSubstring  = tostring(AgentRiskLogsParser[14])\r\n| extend AgentRiskLogsParser2 = iif(SyslogMessage has (\"URL Tracking Status:\"), extract_all(@\"^End Time:\\s([^,]+)?\\,Last update time:\\s([^,]+)?\\,Domain Name:\\s([^,]+)?\\,Group Name:\\s([^,]+)?\\,Server Name:\\s([^,]+)?\\,User Name:\\s([^,]+)?\\,Source Computer Name:\\s([^,]+)?\\,Source Computer IP:\\s([^,]+)?\\,Disposition:\\s([^,]+)?\\,Download site:\\s([^,]+)?\\,Web domain:\\s([^,]+)?\\,Downloaded by:\\s([^,]+)?\\,Prevalence:\\s([^,]+)?\\,Confidence:\\s([^,]+)?\\,URL Tracking Status:\\s([^,]+)?\\,([\\s\\S]+)\",dynamic([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]),AgentRiskLogsSubstring)[0], dynamic(\"\"))\r\n| extend AgentRiskLogsSubstring2  = tostring(AgentRiskLogsParser2[15])\r\n| extend AgentRiskLogsParser3 = iif(SyslogMessage has (\"Sensitivity:\"), extract_all(@\"^First Seen:\\s([^,]+)?\\,Sensitivity:\\s([^,]+)?\\,Permitted application reason:\\s([^,]+)?\\,Application hash:\\s([^,]+)?\\,Hash type:\\s([^,]+)?\\,Company name:\\s([^,]+)?\\,Application name:\\s([^,]+)?\\,Application version:\\s([^,]+)?\\,Application type:\\s([^,]+)?\\,File size \\(bytes\\):\\s([^,]+)?\\,Category set:\\s([^,]+)?\\,Category type:\\s([^,]+)?\\,Location:\\s([^,]+)?\\,Intensive Protection Level:\\s([^,]+)?\\,Certificate issuer:\\s([^,]+)?\\,([\\s\\S]+)\",dynamic([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]),AgentRiskLogsSubstring2)[0], dynamic(\"\"))\r\n| extend AgentRiskLogsSubstring3  = tostring(AgentRiskLogsParser3[15])\r\n| extend AgentRiskLogsParser4 = iif(SyslogMessage has (\"Certificate signer:\"), extract_all(@\"^Certificate signer:\\s([^,]+)?\\,Certificate thumbprint:\\s([^,]+)?\\,Signing timestamp:\\s([^,]+)?\\,Certificate serial number:\\s([^,]+)?(\\,|$)\",dynamic([1,2,3,4]),AgentRiskLogsSubstring3)[0], dynamic(\"\"))\r\n| extend SiteName = case(LogType has \"Administrative Logs\", tostring(AdministrativeLogsParser[0]),\r\n            LogType has \"Agent Activity Logs\", tostring(AgentActivityLogsParser[0]), \"\"),\r\n         ServerName = case(LogType has \"Administrative Logs\", tostring(AdministrativeLogsParser[1]),\r\n            LogType has \"Agent Risk Logs\", tostring(AgentRiskLogsParser2[4]), \"\"),\r\n         DomainName = case(LogType has \"Administrative Logs\", tostring(AdministrativeLogsParser[2]),\r\n            LogType has \"Agent Activity Logs\", tostring(AgentActivityLogsParser[6]), \r\n            LogType has \"Agent Behavior Logs\", tostring(AgentBehaviorLogsParser2[4]), \r\n            LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser2[5]), \r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser2[4]), \r\n            LogType has \"Agent Risk Logs\", tostring(AgentRiskLogsParser2[2]), \"\"),\r\n         AdminName = tostring(AdministrativeLogsParser[3]),\r\n         EventDescription = case(LogType has \"Administrative Logs\", tostring(AdministrativeLogsParser[4]),\r\n            LogType has \"Agent System Logs\", tostring(AgentSystemLogsParser[3]), \r\n            LogType has \"Agent Activity Logs\", tostring(AgentActivityLogsParser[3]), \r\n            LogType has \"Agent Behavior Logs\", extract(@\"([\\S\\s]+)\\-\\sCaller\\sMD5\",1,tostring(AgentBehaviorLogsParser[3])),\r\n            LogType has \"Agent Security Logs\", iif(isempty(tostring(AgentSecurityLogsParser[2])),tostring(AgentSecurityLogsParser[3]),tostring(AgentSecurityLogsParser[2])), LogType has \"Agent System Logs\", tostring(AgentSystemLogsParser[3]),\r\n            LogType has \"Agent Risk Logs\", tostring(AgentRiskLogsParser[8]), \"\"),\r\n         Category = toint(AgentSystemLogsParser[1]),\r\n         EventSource = tostring(AgentSystemLogsParser[2]),\r\n         EventTimestamp = tostring(AgentSystemLogsParser[4]),\r\n         GroupName = case(LogType has \"Agent System Logs\", tostring(AgentSystemLogsParser[5]),\r\n            LogType has \"Agent Risk Logs\", tostring(AgentRiskLogsParser2[3]), \"\"),\r\n         SEPMDomainName = tostring(AgentActivityLogsParser[2]),\r\n         HostName = tostring(AgentActivityLogsParser[4]),\r\n         UserName = case(LogType has \"Agent Activity Logs\", tostring(AgentActivityLogsParser[5]),\r\n            LogType has \"Agent Behavior Logs\", tostring(AgentBehaviorLogsParser2[3]), \r\n            LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser2[4]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser2[3]), \r\n            LogType has \"Agent Risk Logs\", tostring(AgentRiskLogsParser2[5]),\"\"),\r\n         IpAddr = tostring(AgentBehaviorLogsParser[1]),\r\n         Action = case(LogType has \"Agent Behavior Logs\", tostring(AgentBehaviorLogsParser[2]),\r\n            LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser2[6]), \r\n            LogType has \"Agent Packet Logs\", tostring(AgentPacketLogsParser[6]), \r\n            LogType has \"Agent Risk Logs\", tostring(AgentRiskLogsParser[0]), \"\"),\r\n         CallerMD5Hash = extract(@\"Caller\\sMD5\\=(\\S+)\",1,tostring(AgentBehaviorLogsParser[3])),\r\n         ApiName = tostring(AgentBehaviorLogsParser[4]),\r\n         EventStartTime = case(LogType has \"Agent Behavior Logs\", todatetime(AgentBehaviorLogsParser[5]),\r\n            LogType has \"Agent Traffic Logs\", todatetime(AgentTrafficLogsParser[10]), \r\n            LogType has \"Agent Security Logs\", todatetime(AgentSecurityLogsParser[13]), \r\n            LogType has \"Agent Risk Logs\", todatetime(AgentRiskLogsParser[12]), datetime(null)),\r\n         EventEndTime = case(LogType has \"Agent Behavior Logs\", todatetime(AgentBehaviorLogsParser[6]),\r\n            LogType has \"Agent Traffic Logs\", todatetime(AgentTrafficLogsParser[11]), \r\n            LogType has \"Agent Security Logs\", todatetime(AgentSecurityLogsParser[14]), \r\n            LogType has \"Agent Risk Logs\", todatetime(AgentRiskLogsParser[14]), \r\n            LogType has \"Agent Risk Logs\", todatetime(AgentRiskLogsParser2[0]), datetime(null)),\r\n         SecurityRuleName = tostring(AgentBehaviorLogsParser[7]),\r\n         CallerProcessId = toint(AgentBehaviorLogsParser[8]),\r\n         CallerProcessName = tostring(AgentBehaviorLogsParser[9]),\r\n         AgentBehaviorLogsSubstring = tostring(AgentBehaviorLogsParser[10]),\r\n         CallerReturnAddr = tostring(AgentBehaviorLogsParser2[0]),\r\n         CallerReturnModuleName = tostring(AgentBehaviorLogsParser2[1]),\r\n         Parameters = tostring(AgentBehaviorLogsParser2[2]),\r\n         ActionType = tostring(AgentBehaviorLogsParser2[5]),\r\n         FileSize = case(LogType has \"Agent Behavior Logs\", toint(AgentBehaviorLogsParser2[6]),\r\n            LogType has \"Agent Risk Logs\", toint(AgentRiskLogsParser3[9]), int(null)),\r\n         DeviceId = tostring(AgentBehaviorLogsParser2[7]),\r\n         LocalHostIpAddr = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser[1]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser[4]), \r\n            LogType has \"Agent Packet Logs\", tostring(AgentPacketLogsParser[0]), \"\"),\r\n         LocalPortNumber = case(LogType has \"Agent Traffic Logs\", toint(AgentTrafficLogsParser[2]),\r\n            LogType has \"Agent Security Logs\", toint(AgentSecurityLogsParser2[5]), \r\n            LogType has \"Agent Packet Logs\", toint(AgentPacketLogsParser[1]), int(null)),\r\n         LocalHostMacAddr = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser[3]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser[5]), \"\"),\r\n         RemoteHostIpAddr = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser[4]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser[7]), \r\n            LogType has \"Agent Packet Logs\", tostring(AgentPacketLogsParser[2]), \"\"),\r\n         RemoteHostName = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser[5]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser[6]), \r\n            LogType has \"Agent Packet Logs\", tostring(AgentPacketLogsParser[3]), \"\"),\r\n         RemotePortNumber = case(LogType has \"Agent Traffic Logs\", toint(AgentTrafficLogsParser[6]),\r\n            LogType has \"Agent Security Logs\", toint(AgentSecurityLogsParser2[6]), \r\n            LogType has \"Agent Packet Logs\", toint(AgentPacketLogsParser[4]), int(null)),\r\n         RemoteHostMacAddr = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser[7]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser[8]), \"\"),\r\n         NetworkProtocol = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser[8]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser[10]), \"\"),\r\n         TrafficDirection = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser[9]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser[9]), \"\"),\r\n         AgentTrafficLogsSubstring  = tostring(AgentTrafficLogsParser[12]),\r\n         Occurrences = case(LogType has \"Agent Traffic Logs\", toint(AgentTrafficLogsParser2[0]),\r\n            LogType has \"Agent Security Logs\", toint(AgentSecurityLogsParser2[0]), \r\n            LogType has \"Agent Risk Logs\", toint(AgentRiskLogsParser[5]), int(null)),\r\n         ApplicationName = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser2[1]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser2[0]), \r\n            LogType has \"Agent Risk Logs\", AgentRiskLogsParser3[6], \"\"),\r\n         RuleName = tostring(AgentTrafficLogsParser2[2]),\r\n         Location = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser2[3]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser2[2]), \r\n            LogType has \"Agent Risk Logs\", tostring(AgentRiskLogsParser3[12]), \"\"),\r\n         Sha256 = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser2[8]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser2[11]), \"\"),\r\n         Md5 = case(LogType has \"Agent Traffic Logs\", tostring(AgentTrafficLogsParser2[10]),\r\n            LogType has \"Agent Security Logs\", tostring(AgentSecurityLogsParser2[12]), \"\"),\r\n         IntrusionId = tostring(AgentSecurityLogsParser[11]),\r\n         CidsSignatureId = tostring(AgentSecurityLogsParser2[7]),\r\n         CidsSignatureString = tostring(AgentSecurityLogsParser2[8]),\r\n         CidsSignatureSubId = toint(AgentSecurityLogsParser2[9]),\r\n         IntrusionUrl = tostring(AgentSecurityLogsParser2[10]),\r\n         Application = tostring(AgentPacketLogsParser[5]),\r\n         SrcIpAddr = tostring(AgentRiskLogsParser[1]),\r\n         SrcHostName = tostring(AgentRiskLogsParser[2]),\r\n         Source = tostring(AgentRiskLogsParser[3]),\r\n         RiskName = tostring(AgentRiskLogsParser[4]),\r\n         FilePath = iif(isempty(tostring(AgentRiskLogsParser[6])),tostring(AgentRiskLogsParser[7]),tostring(AgentRiskLogsParser[6])),\r\n         ActualAction = tostring(AgentRiskLogsParser[9]),\r\n         RequestedAction = tostring(AgentRiskLogsParser[10]),\r\n         SecondaryAction = tostring(AgentRiskLogsParser[11]),\r\n         EventInsertTime = todatetime(AgentRiskLogsParser[13]),\r\n         LastUpdateTime = todatetime(AgentRiskLogsParser2[1]),\r\n         SrcComputerName = tostring(AgentRiskLogsParser2[6]),\r\n         SrcComputerIpAddr = tostring(AgentRiskLogsParser2[7]),\r\n         Disposition = tostring(AgentRiskLogsParser2[8]),\r\n         DownloadSite = tostring(AgentRiskLogsParser2[9]),\r\n         WebDomain = tostring(AgentRiskLogsParser2[10]),\r\n         DownloadedBy = tostring(AgentRiskLogsParser2[11]),\r\n         Prevalence = tostring(AgentRiskLogsParser2[12]),\r\n         Confidence = tostring(AgentRiskLogsParser2[13]),\r\n         UrlTrackingStatus = tostring(AgentRiskLogsParser2[14]),\r\n         FirstSeen = tostring(AgentRiskLogsParser3[0]),\r\n         Sensitivity = tostring(AgentRiskLogsParser3[1]),\r\n         PermittedApplicationReason = tostring(AgentRiskLogsParser3[2]),\r\n         ApplicationHash = tostring(AgentRiskLogsParser3[3]),\r\n         HashType = tostring(AgentRiskLogsParser3[4]),\r\n         CompanyName = tostring(AgentRiskLogsParser3[5]),\r\n         ApplicationVersion = tostring(AgentRiskLogsParser3[7]),\r\n         ApplicationType = tostring(AgentRiskLogsParser3[8]),\r\n         CategorySet = tostring(AgentRiskLogsParser3[10]),\r\n         CategoryType = tostring(AgentRiskLogsParser3[11]),\r\n         IntensiveProtectionLevel = tostring(AgentRiskLogsParser3[13]),\r\n         CertificateIssuer = tostring(AgentRiskLogsParser3[14]),\r\n         CertificateSigner = tostring(AgentRiskLogsParser4[0]),\r\n         CertificateThumbprint = tostring(AgentRiskLogsParser4[1]),\r\n         SigningTimestamp = tostring(AgentRiskLogsParser4[2]),\r\n         CertificateSerialNumber = tostring(AgentRiskLogsParser4[3])\r\n| extend LogType = case(LogType !in (\"Agent System Logs\",\"Agent Activity Logs\",\"Agent Behavior Logs\", \"Agent Traffic Logs\",\"Agent Security Logs\", \"Agent Packet Logs\", \"Agent Risk Logs\", \"Administrative Logs\"), iif(isempty(LogType),\"Other\", LogType), LogType)\r\n| project-away *Parser*, *Substring*\r\n",
        "version": 1
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId1'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId1')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
        "contentId": "[variables('_parserContentId1')]",
        "kind": "Parser",
        "version": "[variables('parserVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Symantec Endpoint Protection",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "2.0.4",
        "kind": "Solution",
        "contentSchemaVersion": "2.0.0",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Symantec Endpoint Protection",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId1')]",
              "version": "[variables('analyticRuleVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId2')]",
              "version": "[variables('analyticRuleVersion2')]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId1')]",
              "version": "[variables('parserVersion1')]"
            }
          ]
        },
        "firstPublishDate": "2022-07-01",
        "providers": [
          "Symantec"
        ],
        "categories": {
          "domains": [
            "Security - Threat Protection"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
