{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "",
        "description":  "",
        "prerequisites":  "",
        "postDeployment":  [
        ],
        "prerequisitesDeployTemplateFile":  "",
        "lastUpdateTime":  "",
        "entities":  [
        ],
        "tags":  [
        ],
        "author":  {
            "name":  "Vikas Chaturvedi"
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "PaloAltoXDR",
            "type":  "string"
        },
        
         "Teams GroupId": {
             "defaultValue": "TeamgroupId",
             "type": "String",
             "metadata": {
                         "description": "GroupId of the Team channel"
                         }
    },
         "Teams ChannelId": {
             "defaultValue": "TeamChannelId",
             "type": "String",
             "metadata": {
                         "description": "Team ChannelId"
                         }
    }
   },
    
    
    "variables":  {
        "AzuremonitorlogsConnectionName":  "[concat('Azuremonitorlogs-', parameters('PlaybookName'))]",
        "MicrosoftSentinelConnectionName":  "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
        "TeamsConnectionName":  "[concat('Teams-', parameters('PlaybookName'))]",
        "VirustotalConnectionName":  "[concat('Virustotal-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Disabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        }
                    },
                    "triggers":  {
                        "Microsoft_Sentinel_incident":  {
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "body":  {
                                    "callback_url":  "@{listCallbackUrl()}"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path":  "/incident-creation"
                            }
                        }
                    },
                    "actions":  {
                        "Entities_-_Get_Accounts":  {
                            "runAfter":  {
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/entities/account"
                            }
                        },
                        "Entities_-_Get_Hosts":  {
                            "runAfter":  {
                                "Entities_-_Get_Accounts":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/entities/host"
                            }
                        },
                        "Entities_-_Get_IPs":  {
                            "runAfter":  {
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/entities/ip"
                            }
                        },
                        "For_each":  {
                            "foreach":  "@body('Entities_-_Get_Hosts')?['Hosts']",
                            "actions":  {
                                "Post_message_in_a_chat_or_channel":  {
                                    "runAfter":  {
                                        "Run_query_and_list_results":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "messageBody":  "\u003cp\u003eHere's the 12 hours acitivity done on host for incident -@{triggerBody()?['object']?['properties']?['incidentNumber']} and host - @{items('For_each')?['HostName']}\u003cbr\u003e\n\u003cbr\u003e\n\u003cbr\u003e\n@{body('Run_query_and_list_results')?['value']}\u003cbr\u003e\n\u003c/p\u003e",
                                            "recipient":  {
                                                "channelId":  "[parameters('Teams ChannelId')]",
                                                "groupId":  "[parameters('Teams GroupId')]"
                                            }
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['teams']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "path":  "/beta/teams/conversation/message/poster/Flow bot/location/@{encodeURIComponent('Channel')}"
                                    }
                                },
                                "Run_query_and_list_results":  {
                                    "runAfter":  {
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  "search '@{items('For_each')?['HostName']}'\n| summarize by $table, FileName, DisplayName, VendorName, AlertSeverity, ActionType, InitiatingProcessFileName, PublicIP, RemediationSteps, ProviderName\n| limit 10",
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "path":  "/queryData",
                                        "queries":  {
                                            "resourcegroups":  "",
                                            "resourcename":  "",
                                            "resourcetype":  "",
                                            "subscriptions":  "",
                                            "timerange":  ""
                                        }
                                    }
                                }
                            },
                            "runAfter":  {
                                "Initialize_variable_2":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "For_each_2":  {
                            "foreach":  "@body('Entities_-_Get_Accounts')?['Accounts']",
                            "actions":  {
                                "Post_message_in_a_chat_or_channel_2":  {
                                    "runAfter":  {
                                        "Run_query_and_list_results_2":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "messageBody":  "\u003cp\u003eHere's the 12 hours acitivity done on Accounts involved in this incident -@{triggerBody()?['object']?['properties']?['incidentNumber']} and accounts - @{items('For_each_2')?['Name']}\u003cbr\u003e\n\u003cbr\u003e\n\u003cbr\u003e\n@{body('Run_query_and_list_results_2')?['value']}\u003c/p\u003e",
                                            "recipient":  {
                                                "channelId":  "[parameters('Teams ChannelId')]",
                                                "groupId":  "[parameters('Teams GroupId')]"
                                            }
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['teams']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "path":  "/beta/teams/conversation/message/poster/Flow bot/location/@{encodeURIComponent('Channel')}"
                                    }
                                },
                                "Run_query_and_list_results_2":  {
                                    "runAfter":  {
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  "search '@{items('For_each_2')?['Name']}'\n| summarize by UserPrincipalName, IpAddress, AlertError, Type, Title, Category, SeverityLevel_string\n| limit 10",
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "path":  "/queryData",
                                        "queries":  {
                                            "resourcegroups":  "",
                                            "resourcename":  "",
                                            "resourcetype":  "",
                                            "subscriptions":  "",
                                            "timerange":  ""
                                        }
                                    }
                                }
                            },
                            "runAfter":  {
                                "Initialize_variable_3":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "For_each_IP_in_incident":  {
                            "foreach":  "@body('Entities_-_Get_IPs')?['IPs']",
                            "actions":  {
                                "Add_comment_to_incident_(V3)":  {
                                    "runAfter":  {
                                        "Post_adaptive_card_and_wait_for_a_response":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                            "message":  "\u003cp\u003eSentinel ID - @{triggerBody()?['object']?['properties']?['incidentNumber']} can be resolved now as confirmed by Analyst.\u003cbr\u003e\n\u003cbr\u003e\nIP Address : \u0026nbsp;@{items('For_each_IP_in_incident')?['Address']}\u003cbr\u003e\n\u003cbr\u003e\nHere is the TI Report on detected IPs\u0026nbsp;:\u003cbr\u003e\n\u003cbr\u003e\nCountry \u0026nbsp;: \u0026nbsp;@{body('Get_an_IP_report')?['data']?['attributes']?['country']}\u003cbr\u003e\n\u0026nbsp;Malicious Votes : @{body('Get_an_IP_report')?['data']?['attributes']?['total_votes']?['malicious']}\u003cbr\u003e\nHarmless Votes: @{body('Get_an_IP_report')?['data']?['attributes']?['total_votes']?['harmless']}\u003cbr\u003e\n\u0026nbsp;Reputation : @{body('Get_an_IP_report')?['data']?['attributes']?['reputation']}\u003cbr\u003e\nNetwork : @{body('Get_an_IP_report')?['data']?['attributes']?['network']}\u003cbr\u003e\n\u003cbr\u003e\nAnalyst has Initiated a Malware Scan, Blocked IP Address and Escalating this to L2 analyst please investigate the provided report and Isolate the machine is required.\u003cbr\u003e\n\u003c/p\u003e"
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "path":  "/Incidents/Comment"
                                    }
                                },
                                "Get_an_IP_report":  {
                                    "runAfter":  {
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['virustotal_1']['connectionId']"
                                            }
                                        },
                                        "method":  "get",
                                        "path":  "/api/v3/ip_addresses/connectorV2/@{encodeURIComponent(items('For_each_IP_in_incident')?['Address'])}"
                                    }
                                },
                                "Post_adaptive_card_and_wait_for_a_response":  {
                                    "runAfter":  {
                                        "Get_an_IP_report":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ApiConnectionWebhook",
                                    "inputs":  {
                                        "body":  {
                                            "body":  {
                                                "messageBody":  "{\n    \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n    \"type\": \"AdaptiveCard\",\n    \"version\": \"1.0\",\n    \"body\": [\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"Incident - @{triggerBody()?['object']?['properties']?['incidentNumber']}, Severity - @{triggerBody()?['object']?['properties']?['severity']}\",\n            \"size\": \"Large\",\n            \"isSubtle\": true\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"@{triggerBody()?['object']?['properties']?['createdTimeUtc']}\",\n            \"spacing\": \"None\"\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"@{triggerBody()?['object']?['properties']?['title']}\",\n            \"spacing\": \"None\"\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"Incident description\",\n            \"weight\": \"Bolder\",\n            \"wrap\": true\n\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \" @{triggerBody()?['object']?['properties']?['description']}\",\n            \"wrap\": true\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"[view the Incident](@{triggerBody()?['object']?['properties']?['incidentUrl']})\",\n            \"wrap\": true\n        },   \n\n\n\n\n        {\n            \"type\": \"ColumnSet\",\n            \"columns\": [\n               {\n                    \"type\": \"Column\",\n                    \"items\": [\n                       \n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"IP Address : @{items('For_each_IP_in_incident')?['Address']}\",\n                            \"wrap\": true,\n                            \"weight\": \"Bolder\"\n                            \n                        },\n                        {\n                             \"type\": \"TextBlock\",\n                              \"weight\": \"bolder\",\n                               \"text\": \"Threat Intel Report on IPs Found\",\n                                \"wrap\": true\n                                \n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Country :  @{body('Get_an_IP_report')?['data']?['attributes']?['country']}\",\n                             \"wrap\": true\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Continent :  @{body('Get_an_IP_report')?['data']?['attributes']?['continent']}\",\n                            \"wrap\": true\n                        },\n                       {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Owner : @{body('Get_an_IP_report')?['data']?['attributes']?['as_owner']} \",\n                            \"wrap\": true\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Network :  @{body('Get_an_IP_report')?['data']?['attributes']?['network']}\",\n                            \"wrap\": true\n                         },\n                         {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Regional Internet Registery : @{body('Get_an_IP_report')?['data']?['attributes']?['regional_internet_registry']} \",\n                            \"wrap\": true\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Total Votes Malicious : @{body('Get_an_IP_report')?['data']?['attributes']?['total_votes']?['malicious']} \",\n                            \"wrap\": true\n                          },\n                         {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Total Votes Harmless:  @{body('Get_an_IP_report')?['data']?['attributes']?['total_votes']?['harmless']}\",\n                            \"wrap\": true\n                         },\n                         {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Suspicious Statistics :  @{body('Get_an_IP_report')?['data']?['attributes']?['last_analysis_stats']?['suspicious']}\",\n                            \"wrap\": true\n                         },\n                         {\n                            \"type\": \"TextBlock\",\n                            \"text\": \" Reputation : @{body('Get_an_IP_report')?['data']?['attributes']?['reputation']}\",\n                            \"wrap\": true\n                        },\n                        {\n                            \"type\": \"TextBlock\",\n                            \"text\": \"Network :  @{body('Get_an_IP_report')?['data']?['attributes']?['network']}\",\n                            \"wrap\": true\n                        }\n                    ],\n                    \"width\": \"auto\"\n                }\n            ]\n        },\n\n       \n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"Actionable items in Cortex Portal\",\n            \"size\": \"Large\",\n            \"weight\": \"Bolder\",\n            \"horizontalAlignment\": \"Left\"\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"Malware Scan\",\n            \"size\": \"Medium\",\n            \"horizontalAlignment\": \"Left\"\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"Isolate Machine\",\n            \"size\": \"Medium\",\n            \"horizontalAlignment\": \"Left\"\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"Add IP to Block List\",\n            \"size\": \"Medium\",\n            \"horizontalAlignment\": \"Left\"\n        },\n\n    \n\n       {\n      \"type\": \"Input.ChoiceSet\",\n      \"id\": \"acFollowUp\",\n      \"isMultiSelect\": true,\n      \"value\": \"Select the task to be performed\",\n      \"choices\": [\n                {\n                \"title\": \"Executed Malware Scan\",\n                \"value\": \"Done\"\n                },\n                {\n                \"title\": \"Blocked IP Address\",\n                \"value\": \"Done\"\n                },\n                {\n                \"title\": \"Isolated machine\",\n                \"value\": \"Yes\"\n                }\n            ]   \n        } \n    ],\n\t        \n    \"actions\": [\n                    {\n                        \"type\": \"Action.Submit\",\n                        \"title\": \"Sentinel Incdient can be closed\"\n                    }\n               ]\n       \n  \n\n}",
                                                "recipient":  {
                                                    "channelId":  "[parameters('Teams ChannelId')]",
                                                    "groupId":  "[parameters('Teams GroupId')]"
                                                },
                                                "updateMessage":  "Thanks for your response!"
                                            },
                                            "notificationUrl":  "@{listCallbackUrl()}"
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['teams']['connectionId']"
                                            }
                                        },
                                        "path":  "/v1.0/teams/conversation/gatherinput/poster/Flow bot/location/@{encodeURIComponent('Channel')}/$subscriptions"
                                    }
                                }
                            },
                            "runAfter":  {
                                "Initialize_variable":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "Initialize_variable":  {
                            "runAfter":  {
                                "Entities_-_Get_IPs":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "IPAddresses",
                                        "type":  "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_2":  {
                            "runAfter":  {
                                "Entities_-_Get_Hosts":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Hosts",
                                        "type":  "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_3":  {
                            "runAfter":  {
                                "Entities_-_Get_Hosts":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Accounts",
                                        "type":  "array"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "azuremonitorlogs":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]",
                                "connectionName":  "[variables('AzuremonitorlogsConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuremonitorlogs')]"
                            },
                            "azuresentinel":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName":  "[variables('MicrosoftSentinelConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "teams":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                                "connectionName":  "[variables('TeamsConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
                            },
                            "virustotal_1":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('VirustotalConnectionName'))]",
                                "connectionName":  "[variables('VirustotalConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Virustotal')]"
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "hidden-SentinelTemplateName":  "PaloAltoXDR",
                "hidden-SentinelTemplateVersion":  "1.0"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('VirustotalConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('AzuremonitorlogsConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('AzuremonitorlogsConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuremonitorlogs')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('MicrosoftSentinelConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('TeamsConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('TeamsConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('VirustotalConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('VirustotalConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Virustotal')]"
                }
            }
        }
    ]
}
